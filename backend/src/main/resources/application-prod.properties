# Production Configuration for Distributed Job Scheduler

# Server Configuration
server.port=8080
server.servlet.context-path=/
spring.application.name=distributed-job-scheduler

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/distributed_job_scheduler
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=JobSchedulerPool
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.database=0
spring.data.redis.password=${REDIS_PASSWORD:}

# Redis Connection Pool (Lettuce)
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5
spring.data.redis.lettuce.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.redis.enabled=true
management.health.db.enabled=true
management.endpoints.web.base-path=/actuator

# Health Check Groups
management.endpoint.health.group.readiness.include=readinessState,db,redis
management.endpoint.health.group.liveness.include=livenessState

# Logging Configuration
logging.level.root=INFO
logging.level.com.jobscheduler=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}
spring.security.user.roles=ADMIN

# Job Scheduler Configuration
job.scheduler.max-threads=${MAX_THREADS:10}
job.scheduler.queue-capacity=${QUEUE_CAPACITY:100}
job.scheduler.keep-alive-seconds=${KEEP_ALIVE:300}
job.scheduler.worker-heartbeat-interval=${HEARTBEAT_INTERVAL:30}
job.scheduler.worker-timeout=${WORKER_TIMEOUT:120}
job.scheduler.retry-delay-seconds=${RETRY_DELAY:60}

# Performance Configuration
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
